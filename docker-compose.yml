version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: deallens-postgres
    environment:
      POSTGRES_DB: deallens
      POSTGRES_USER: deallens
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/db/init:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U deallens"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: deallens-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Development containers (optional - can run locally instead)
  web-dev:
    build:
      context: .
      dockerfile: apps/web/Dockerfile.dev
    container_name: deallens-web-dev
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
      - /app/apps/web/node_modules
    environment:
      - NODE_ENV=development
      - NEXT_PUBLIC_API_URL=http://localhost:8000
      - DATABASE_URL=postgresql://deallens:password@postgres:5432/deallens
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - dev

  api-dev:
    build:
      context: .
      dockerfile: apps/api/Dockerfile.dev
    container_name: deallens-api-dev
    ports:
      - "8000:8000"
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://deallens:password@postgres:5432/deallens
      - REDIS_URL=redis://redis:6379
      - API_DEBUG=true
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - dev

  worker-dev:
    build:
      context: .
      dockerfile: apps/worker/Dockerfile.dev
    container_name: deallens-worker-dev
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
      - DATABASE_URL=postgresql://deallens:password@postgres:5432/deallens
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    profiles:
      - dev

volumes:
  postgres_data:
  redis_data:
