name: API CI

on:
  pull_request:
    paths:
      - 'apps/api/**'
      - '.github/workflows/api-ci.yml'
  push:
    branches:
      - main
    paths:
      - 'apps/api/**'

jobs:
  api-ci:
    name: API CI
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11']
    
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_deallens
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-

      - name: Install dependencies
        run: |
          cd apps/api
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with ruff
        run: |
          cd apps/api
          pip install ruff
          ruff check . --fix
        continue-on-error: true

      - name: Format with black
        run: |
          cd apps/api
          pip install black
          black --check .
        continue-on-error: true

      - name: Type check with mypy
        run: |
          cd apps/api
          pip install mypy
          mypy . || echo "MyPy check completed with warnings"
        continue-on-error: true

      - name: Run tests
        run: |
          cd apps/api
          pip install pytest pytest-asyncio
          pytest || echo "No tests found or tests failed"
        continue-on-error: true
        env:
          DATABASE_URL: postgresql://postgres:postgres@localhost:5432/test_deallens
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-jwt-secret-min-32-characters-long
          ENVIRONMENT: test

      - name: Test import structure
        run: |
          cd apps/api
          python -c "
          try:
              from main import app
              print('✅ Main app imports successfully')
          except Exception as e:
              print(f'❌ Import error: {e}')
              exit(1)
          "
