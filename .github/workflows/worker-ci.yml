name: Worker CI

on:
  pull_request:
    paths:
      - 'apps/worker/**'
      - '.github/workflows/worker-ci.yml'
  push:
    branches:
      - main
    paths:
      - 'apps/worker/**'

jobs:
  worker-ci:
    name: Worker CI
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        python-version: ['3.11']
    
    services:
      redis:
        image: redis:7
        ports:
          - 6379:6379
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip dependencies
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-worker-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-worker-

      - name: Install dependencies
        run: |
          cd apps/worker
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with ruff
        run: |
          cd apps/worker
          pip install ruff
          ruff check . --fix
        continue-on-error: true

      - name: Format with black
        run: |
          cd apps/worker
          pip install black
          black --check .
        continue-on-error: true

      - name: Test Celery app import
        run: |
          cd apps/worker
          python -c "
          try:
              from celery_app import app
              print('✅ Celery app imports successfully')
              print(f'Broker: {app.conf.broker_url}')
          except Exception as e:
              print(f'❌ Celery import error: {e}')
              exit(1)
          "
        env:
          REDIS_URL: redis://localhost:6379
          DATABASE_URL: postgresql://test:test@localhost:5432/test
          ENVIRONMENT: test

      - name: Test task imports
        run: |
          cd apps/worker
          python -c "
          import sys
          import os
          sys.path.append('.')
          
          try:
              import tasks.sync_market
              import tasks.sync_news
              import tasks.generate_insights
              import tasks.evaluate_alerts
              import tasks.send_notifications
              print('✅ All task modules import successfully')
          except ImportError as e:
              print(f'⚠️  Task import warning: {e} (may be expected if modules are incomplete)')
          except Exception as e:
              print(f'❌ Task import error: {e}')
              exit(1)
          "
        continue-on-error: true

      - name: Run light unit tests
        run: |
          cd apps/worker
          pip install pytest pytest-asyncio
          pytest tests/ || echo "No tests found or tests failed"
        continue-on-error: true
        env:
          REDIS_URL: redis://localhost:6379
          ENVIRONMENT: test

      - name: Test task scheduling
        run: |
          cd apps/worker
          python -c "
          from celery_app import app
          print('✅ Celery beat schedule:')
          for name, config in app.conf.beat_schedule.items():
              print(f'  - {name}: {config[\"task\"]} every {config[\"schedule\"]}')
          "
        env:
          REDIS_URL: redis://localhost:6379
          ENVIRONMENT: test
